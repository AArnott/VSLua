<#@ template debug="true" language="C#" #>
<#@ Output Extension=".generated.cs" #>
<#
	this.Namespace = "LanguageModel";
	this.DefineInterfaces = false;
	this.DefineBuilders = true;
	this.DefineWithMethodsPerProperty = false;
#>
<#@ Include File="ImmutableObjectGraph\ImmutableObjectGraph.Delta.tt.inc" #>
<#@ Include File="ImmutableObjectGraph\ImmutableObjectGraph.tt.inc" #>
<#+

	abstract class SyntaxNode {
		[Required]
		ImmutableList<Trivia> triviaList;
		[Required]
		int fullStartPosition;
		[Required]
		int startPosition;
		[Required]
		int length;
	}

	[Ignore]
	class Trivia {}

	class Block : SyntaxNode {
		ImmutableList<SyntaxNode> children;
	}

	class ElseBlock : SyntaxNode {
        Keyword elseKeyword;
        Block block;
    }

    class ElseIfBlock { //TODO: inherit from syntax node
        Keyword elseIfKeyword;
        Expression exp;
        Keyword thenKeyword;
        Block block;
    }
	
	class ChunkNode : SyntaxNode {
		Block programBlock;
        EndOfFileNode endOfFile;
	}

	class EndOfFileNode : SyntaxNode {
	 	//TODO: implement
	}

    class IfNode : SyntaxNode {
        Keyword ifKeyword;
        Expression exp;
        Keyword thenKeyword;
        Block ifBlock;
        ImmutableList<ElseIfBlock> elseIfList;
        ElseBlock elseBlock;
        Keyword endKeyword;
	}
	
	class Expression : SyntaxNode {
		//TODO: implement further
		KeyValue keyvalue;
	}

	class KeyValue : SyntaxNode {
		string value;
	}
	
	class Keyword : SyntaxNode {
		string value;
	}

#>
